name: CI Pipeline
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Current WOrking Directory
        run: pwd

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          POSTGRES_ENGINE: ${{ vars.POSTGRES_ENGINE }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
          ROOT_POSTGRES_PASSWORD: ${{ vars.ROOT_POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
          REDIS_HOST: ${{ vars.REDIS_HOST }}
          EMAIL_HOST: ${{ vars.EMAIL_HOST }}
          EMAIL_HOST_USER: ${{  vars.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{  vars.EMAIL_HOST_PASSWORD }}
          DEFAULT_FROM_EMAIL: ${{ vars.DEFAULT_FROM_EMAIL }}
          EMAIL_PORT: ${{ vars.EMAIL_PORT }}
          EMAIL_USE_TLS: ${{ vars.EMAIL_USE_TLS }}
          # directory: <directory_name>
          file_name: .env
          fail_on_empty: false
          sort_keys: false

      - name: Check ENV
        run: env
        
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "üõ† Running ./docker.sh file."

      - name: Execute ./docker.sh file
        run: ./docker.sh
