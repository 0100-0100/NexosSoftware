name: CI Pipeline
on:
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    steps:

      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env 🤫
        run: |
          echo "POSTGRES_ENGINE=${{ env.POSTGRES_ENGINE }}" >> .env
          echo "POSTGRES_DB=${{ env.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ env.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_PORT=${{ env.POSTGRES_PORT }}" >> .env
          echo "ROOT_POSTGRES_PASSWORD=${{ env.ROOT_POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_HOST=${{ env.POSTGRES_HOST }}" >> .env
          echo "REDIS_HOST=${{ env.REDIS_HOST }}" >> .env
          echo "EMAIL_HOST=${{ env.EMAIL_HOST }}" >> .env
          echo "EMAIL_HOST_USER=${{ env.EMAIL_HOST_USER }}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ env.EMAIL_HOST_PASSWORD }}" >> .env
          echo "DEFAULT_FROM_EMAIL=${{ env.DEFAULT_FROM_EMAIL }}" >> .env
          echo "EMAIL_PORT=${{ env.EMAIL_PORT }}" >> .env
          echo "EMAIL_USE_TLS=${{ env.EMAIL_USE_TLS }}" >> .env

      - name: Check for .env file
        run: ls -la .env

      - name: Check for .env file
        run: cat .env

      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "🛠 Running ./docker.sh file."

      - name: Execute ./docker.sh file
        run: ./docker.sh
